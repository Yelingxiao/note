<svg id="kity_svg_6" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="2069" height="2159" style="background: rgb(251, 251, 251); visibility: visible;" viewBox="0 0 2069 2159"><defs id="kity_defs_7"><linearGradient id="kity_linearGradient_17" x1="0" y1="0" x2="0" y2="1"><stop id="kity_stop_18" offset="0" stop-color="rgb(255, 255, 255)"></stop><stop id="kity_stop_19" offset="1" stop-color="rgb(204, 204, 204)"></stop></linearGradient><marker id="kity_marker_2" orient="auto" refX="6" refY="0" viewBox="-7 -7 14 14" markerWidth="7" markerHeight="7" markerUnits="userSpaceOnUse"><path id="kity_path_3" fill="rgb(115, 161, 191)" stroke="none" d="M6,0A6,6,0,1,1,-6,0A6,6,0,1,1,6,0"></path></marker></defs><g id="kity_g_8"><g id="minder1" text-rendering="optimize-speed"><g id="minder_connect_group1"><path id="kity_path_31" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M64,694.5A161.5,605,0,0,1,225.5,89.5"></path><path id="kity_path_33" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M299.5,89.5C319.5,89.5,319.5,33.5,339.5,33.5"></path><path id="kity_path_35" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M405.5,33.5C425.5,33.5,425.5,33.5,445.5,33.5"></path><path id="kity_path_37" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M299.5,89.5C319.5,89.5,319.5,89.5,339.5,89.5"></path><path id="kity_path_39" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M431.5,89.5C451.5,89.5,451.5,89.5,471.5,89.5"></path><path id="kity_path_41" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M299.5,89.5C319.5,89.5,319.5,145.5,339.5,145.5"></path><path id="kity_path_43" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M604.5,145.5C624.5,145.5,624.5,145.5,644.5,145.5"></path><path id="kity_path_45" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M64,694.5A161.5,399,0,0,1,225.5,295.5"></path><path id="kity_path_47" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M331.5,295.5C351.5,295.5,351.5,211.5,371.5,211.5"></path><path id="kity_path_49" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M519.5,211.5C539.5,211.5,539.5,211.5,559.5,211.5"></path><path id="kity_path_51" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M331.5,295.5C351.5,295.5,351.5,267.5,371.5,267.5"></path><path id="kity_path_53" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M691.5,267.5C711.5,267.5,711.5,267.5,731.5,267.5"></path><path id="kity_path_55" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M331.5,295.5C351.5,295.5,351.5,323.5,371.5,323.5"></path><path id="kity_path_57" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M505.5,323.5C525.5,323.5,525.5,323.5,545.5,323.5"></path><path id="kity_path_59" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M331.5,295.5C351.5,295.5,351.5,379.5,371.5,379.5"></path><path id="kity_path_61" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M505.5,379.5C525.5,379.5,525.5,379.5,545.5,379.5"></path><path id="kity_path_63" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M64,694.5A161.5,605,0,0,0,225.5,1299.5"></path><path id="kity_path_65" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M331.5,1299.5C351.5,1299.5,351.5,501.5,371.5,501.5"></path><path id="kity_path_67" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M455.5,501.5C475.5,501.5,475.5,445.5,495.5,445.5"></path><path id="kity_path_69" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M659.5,445.5C679.5,445.5,679.5,445.5,699.5,445.5"></path><path id="kity_path_71" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M455.5,501.5C475.5,501.5,475.5,501.5,495.5,501.5"></path><path id="kity_path_73" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M610.5,501.5C630.5,501.5,630.5,501.5,650.5,501.5"></path><path id="kity_path_75" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M455.5,501.5C475.5,501.5,475.5,557.5,495.5,557.5"></path><path id="kity_path_77" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M791.5,557.5C811.5,557.5,811.5,557.5,831.5,557.5"></path><path id="kity_path_79" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M331.5,1299.5C351.5,1299.5,351.5,641.5,371.5,641.5"></path><path id="kity_path_81" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M439.5,641.5C459.5,641.5,459.5,613.5,479.5,613.5"></path><path id="kity_path_83" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M615.5,613.5C635.5,613.5,635.5,613.5,655.5,613.5"></path><path id="kity_path_85" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M439.5,641.5C459.5,641.5,459.5,669.5,479.5,669.5"></path><path id="kity_path_87" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M563.5,669.5C583.5,669.5,583.5,669.5,603.5,669.5"></path><path id="kity_path_89" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M331.5,1299.5C351.5,1299.5,351.5,753.5,371.5,753.5"></path><path id="kity_path_91" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M455.5,753.5C475.5,753.5,475.5,725.5,495.5,725.5"></path><path id="kity_path_93" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M583.5,725.5C603.5,725.5,603.5,725.5,623.5,725.5"></path><path id="kity_path_95" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M455.5,753.5C475.5,753.5,475.5,781.5,495.5,781.5"></path><path id="kity_path_97" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M646.5,781.5C666.5,781.5,666.5,781.5,686.5,781.5"></path><path id="kity_path_99" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M331.5,1299.5C351.5,1299.5,351.5,865.5,371.5,865.5"></path><path id="kity_path_101" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M471.5,865.5C491.5,865.5,491.5,837.5,511.5,837.5"></path><path id="kity_path_103" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M621.5,837.5C641.5,837.5,641.5,837.5,661.5,837.5"></path><path id="kity_path_105" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M471.5,865.5C491.5,865.5,491.5,893.5,511.5,893.5"></path><path id="kity_path_107" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M735.5,893.5C755.5,893.5,755.5,893.5,775.5,893.5"></path><path id="kity_path_109" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M331.5,1299.5C351.5,1299.5,351.5,1061.5,371.5,1061.5"></path><path id="kity_path_111" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M455.5,1061.5C475.5,1061.5,475.5,949.5,495.5,949.5"></path><path id="kity_path_113" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M651.5,949.5C671.5,949.5,671.5,949.5,691.5,949.5"></path><path id="kity_path_115" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M455.5,1061.5C475.5,1061.5,475.5,1005.5,495.5,1005.5"></path><path id="kity_path_117" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M655.5,1005.5C675.5,1005.5,675.5,1005.5,695.5,1005.5"></path><path id="kity_path_119" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M455.5,1061.5C475.5,1061.5,475.5,1061.5,495.5,1061.5"></path><path id="kity_path_121" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M767.5,1061.5C787.5,1061.5,787.5,1061.5,807.5,1061.5"></path><path id="kity_path_123" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M455.5,1061.5C475.5,1061.5,475.5,1117.5,495.5,1117.5"></path><path id="kity_path_125" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M747.5,1117.5C767.5,1117.5,767.5,1117.5,787.5,1117.5"></path><path id="kity_path_127" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M455.5,1061.5C475.5,1061.5,475.5,1173.5,495.5,1173.5"></path><path id="kity_path_129" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M681.5,1173.5C701.5,1173.5,701.5,1173.5,721.5,1173.5"></path><path id="kity_path_131" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M331.5,1299.5C351.5,1299.5,351.5,1285.5,371.5,1285.5"></path><path id="kity_path_133" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M455.5,1285.5C475.5,1285.5,475.5,1229.5,495.5,1229.5"></path><path id="kity_path_135" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M761.5,1229.5C781.5,1229.5,781.5,1229.5,801.5,1229.5"></path><path id="kity_path_137" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M455.5,1285.5C475.5,1285.5,475.5,1285.5,495.5,1285.5"></path><path id="kity_path_139" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M781.5,1285.5C801.5,1285.5,801.5,1285.5,821.5,1285.5"></path><path id="kity_path_141" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M455.5,1285.5C475.5,1285.5,475.5,1341.5,495.5,1341.5"></path><path id="kity_path_143" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M759.5,1341.5C779.5,1341.5,779.5,1341.5,799.5,1341.5"></path><path id="kity_path_145" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M331.5,1299.5C351.5,1299.5,351.5,1649.5,371.5,1649.5"></path><path id="kity_path_147" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M455.5,1649.5C475.5,1649.5,475.5,1397.5,495.5,1397.5"></path><path id="kity_path_149" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M707.5,1397.5C727.5,1397.5,727.5,1397.5,747.5,1397.5"></path><path id="kity_path_151" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M455.5,1649.5C475.5,1649.5,475.5,1453.5,495.5,1453.5"></path><path id="kity_path_153" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M708.5,1453.5C728.5,1453.5,728.5,1453.5,748.5,1453.5"></path><path id="kity_path_155" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M455.5,1649.5C475.5,1649.5,475.5,1509.5,495.5,1509.5"></path><path id="kity_path_157" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M702.5,1509.5C722.5,1509.5,722.5,1509.5,742.5,1509.5"></path><path id="kity_path_159" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M455.5,1649.5C475.5,1649.5,475.5,1565.5,495.5,1565.5"></path><path id="kity_path_161" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M669.5,1565.5C689.5,1565.5,689.5,1565.5,709.5,1565.5"></path><path id="kity_path_163" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M455.5,1649.5C475.5,1649.5,475.5,1621.5,495.5,1621.5"></path><path id="kity_path_165" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M700.5,1621.5C720.5,1621.5,720.5,1621.5,740.5,1621.5"></path><path id="kity_path_167" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M455.5,1649.5C475.5,1649.5,475.5,1677.5,495.5,1677.5"></path><path id="kity_path_169" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M696.5,1677.5C716.5,1677.5,716.5,1677.5,736.5,1677.5"></path><path id="kity_path_171" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M455.5,1649.5C475.5,1649.5,475.5,1733.5,495.5,1733.5"></path><path id="kity_path_173" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M735.5,1733.5C755.5,1733.5,755.5,1733.5,775.5,1733.5"></path><path id="kity_path_175" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M455.5,1649.5C475.5,1649.5,475.5,1789.5,495.5,1789.5"></path><path id="kity_path_177" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M601.5,1789.5C621.5,1789.5,621.5,1789.5,641.5,1789.5"></path><path id="kity_path_179" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M455.5,1649.5C475.5,1649.5,475.5,1845.5,495.5,1845.5"></path><path id="kity_path_181" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M584.5,1845.5C604.5,1845.5,604.5,1845.5,624.5,1845.5"></path><path id="kity_path_183" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M455.5,1649.5C475.5,1649.5,475.5,1901.5,495.5,1901.5"></path><path id="kity_path_185" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M597.5,1901.5C617.5,1901.5,617.5,1901.5,637.5,1901.5"></path><path id="kity_path_187" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M331.5,1299.5C351.5,1299.5,351.5,1985.5,371.5,1985.5"></path><path id="kity_path_189" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M455.5,1985.5C475.5,1985.5,475.5,1957.5,495.5,1957.5"></path><path id="kity_path_191" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M763.5,1957.5C783.5,1957.5,783.5,1957.5,803.5,1957.5"></path><path id="kity_path_193" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M455.5,1985.5C475.5,1985.5,475.5,2013.5,495.5,2013.5"></path><path id="kity_path_195" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M801.5,2013.5C821.5,2013.5,821.5,2013.5,841.5,2013.5"></path><path id="kity_path_197" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M331.5,1299.5C351.5,1299.5,351.5,2097.5,371.5,2097.5"></path><path id="kity_path_199" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M471.5,2097.5C491.5,2097.5,491.5,2069.5,511.5,2069.5"></path><path id="kity_path_201" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M633.5,2069.5C653.5,2069.5,653.5,2069.5,673.5,2069.5"></path><path id="kity_path_203" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M471.5,2097.5C491.5,2097.5,491.5,2125.5,511.5,2125.5"></path><path id="kity_path_205" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M741.5,2125.5C761.5,2125.5,761.5,2125.5,781.5,2125.5"></path></g><g id="minder_node1"><path id="node_outline1" fill="rgb(115, 161, 191)" stroke="rgb(57, 80, 96)" d="M25.5,674.5h77a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-77a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text1" fill="white"><text id="kity_text_22" text-rendering="inherit" font-size="16" dy=".8em" y="686.5" font-family="宋体,SimSun" x="44.5">Array</text></g></g><g id="kity_g_12"><path id="kity_path_13" fill="none" stroke="none" d="M44.5,694.5h0v0h0z"></path></g><g id="kity_g_14"><path id="kity_path_15" fill="none" stroke="none" d="M44.5,694.5h0v0h0z"></path><path id="kity_path_16" fill="none" stroke="none"></path></g><g id="minder_node2"><g id="node_expander7" style="cursor: pointer;"><path id="kity_path_489" fill="white" stroke="gray" d="M226.5,89.5A6,6,0,1,1,214.5,89.5A6,6,0,1,1,226.5,89.5"></path><path id="kity_path_490" fill="none" stroke="gray" d="M216,89.5L225,89.5"></path></g><path id="node_outline8" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M230.5,75.5h66a3,3,0,0,1,3,3v22a3,3,0,0,1,-3,3h-66a3,3,0,0,1,-3,-3v-22a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text8" fill="black"><text id="kity_text_219" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="81.5" x="247.5">属性</text></g></g><g id="minder_node3"><g id="node_expander2" style="cursor: pointer;"><path id="kity_path_474" fill="white" stroke="gray" d="M339.5,33.5A6,6,0,1,1,327.5,33.5A6,6,0,1,1,339.5,33.5"></path><path id="kity_path_475" fill="none" stroke="gray" d="M329,33.5L338,33.5"></path></g><path id="node_outline3" fill="none" stroke="none" d="M344.5,20.5h56a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-56a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text3" fill="black"><text id="kity_text_209" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="25.5" x="349.5">length</text></g></g><g id="minder_node4"><g id="node_expander1" display="none" style="cursor: pointer;"><path id="kity_path_471" fill="white" stroke="gray" d="M445.5,33.5A6,6,0,1,1,433.5,33.5A6,6,0,1,1,445.5,33.5"></path><path id="kity_path_472" fill="none" stroke="gray"></path></g><path id="node_outline2" fill="none" stroke="none" d="M450.5,20.5h266a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-266a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text2" fill="black"><text id="kity_text_207" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="25.5" x="455.5">返回或设置一个数组中的元素个数。</text></g></g><g id="minder_node5"><g id="node_expander4" style="cursor: pointer;"><path id="kity_path_480" fill="white" stroke="gray" d="M339.5,89.5A6,6,0,1,1,327.5,89.5A6,6,0,1,1,339.5,89.5"></path><path id="kity_path_481" fill="none" stroke="gray" d="M329,89.5L338,89.5"></path></g><path id="node_outline5" fill="none" stroke="none" d="M344.5,76.5h82a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-82a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text5" fill="black"><text id="kity_text_213" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="81.5" x="349.5">prototype</text></g></g><g id="minder_node6"><g id="node_expander3" display="none" style="cursor: pointer;"><path id="kity_path_477" fill="white" stroke="gray" d="M471.5,89.5A6,6,0,1,1,459.5,89.5A6,6,0,1,1,471.5,89.5"></path><path id="kity_path_478" fill="none" stroke="gray"></path></g><path id="node_outline4" fill="none" stroke="none" d="M476.5,76.5h563a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-563a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text4" fill="black"><text id="kity_text_211" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="81.5" x="481.5">表示&#xa0;Array 构造函数的原型，并允许您向所有Array对象添加新的属性和方法。</text></g></g><g id="minder_node7"><g id="node_expander6" style="cursor: pointer;"><path id="kity_path_486" fill="white" stroke="gray" d="M339.5,145.5A6,6,0,1,1,327.5,145.5A6,6,0,1,1,339.5,145.5"></path><path id="kity_path_487" fill="none" stroke="gray" d="M329,145.5L338,145.5"></path></g><path id="node_outline7" fill="none" stroke="none" d="M344.5,132.5h255a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-255a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text7" fill="black"><text id="kity_text_217" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="137.5" x="349.5">Array.prototype[@@unscopables]</text></g></g><g id="minder_node8"><g id="node_expander5" display="none" style="cursor: pointer;"><path id="kity_path_483" fill="white" stroke="gray" d="M644.5,145.5A6,6,0,1,1,632.5,145.5A6,6,0,1,1,644.5,145.5"></path><path id="kity_path_484" fill="none" stroke="gray"></path></g><path id="node_outline6" fill="none" stroke="none" d="M649.5,132.5h772a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-772a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text6" fill="black"><text id="kity_text_215" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="137.5" x="654.5">with 绑定中未包含的数组默认属性有：copyWithin, entries, fill, find, findIndex, includes, keys 和&#xa0;values。</text></g></g><g id="minder_node9"><g id="node_expander16" style="cursor: pointer;"><path id="kity_path_516" fill="white" stroke="gray" d="M226.5,295.5A6,6,0,1,1,214.5,295.5A6,6,0,1,1,226.5,295.5"></path><path id="kity_path_517" fill="none" stroke="gray" d="M216,295.5L225,295.5"></path></g><path id="node_outline17" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M230.5,281.5h98a3,3,0,0,1,3,3v22a3,3,0,0,1,-3,3h-98a3,3,0,0,1,-3,-3v-22a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text17" fill="black"><text id="kity_text_237" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="287.5" x="247.5">构建方法</text></g></g><g id="minder_node10"><g id="node_expander9" style="cursor: pointer;"><path id="kity_path_495" fill="white" stroke="gray" d="M371.5,211.5A6,6,0,1,1,359.5,211.5A6,6,0,1,1,371.5,211.5"></path><path id="kity_path_496" fill="none" stroke="gray" d="M361,211.5L370,211.5"></path></g><path id="node_outline10" fill="none" stroke="none" d="M376.5,198.5h138a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-138a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text10" fill="black"><text id="kity_text_223" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="203.5" x="381.5">Array.isArray(obj)</text></g></g><g id="minder_node11"><g id="node_expander8" display="none" style="cursor: pointer;"><path id="kity_path_492" fill="white" stroke="gray" d="M559.5,211.5A6,6,0,1,1,547.5,211.5A6,6,0,1,1,559.5,211.5"></path><path id="kity_path_493" fill="none" stroke="gray"></path></g><path id="node_outline9" fill="none" stroke="none" d="M564.5,198.5h504a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-504a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text9" fill="black"><text id="kity_text_221" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="203.5" x="569.5">obj需要检测的值。如果对象是 Array，则返回值为true; 否则为false。</text></g></g><g id="minder_node12"><g id="node_expander11" style="cursor: pointer;"><path id="kity_path_501" fill="white" stroke="gray" d="M371.5,267.5A6,6,0,1,1,359.5,267.5A6,6,0,1,1,371.5,267.5"></path><path id="kity_path_502" fill="none" stroke="gray" d="M361,267.5L370,267.5"></path></g><path id="node_outline12" fill="none" stroke="none" d="M376.5,254.5h310a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-310a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text12" fill="black"><text id="kity_text_227" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="259.5" x="381.5">Array.from(arrayLike[, mapFn[, thisArg]])</text></g></g><g id="minder_node13"><g id="node_expander10" display="none" style="cursor: pointer;"><path id="kity_path_498" fill="white" stroke="gray" d="M731.5,267.5A6,6,0,1,1,719.5,267.5A6,6,0,1,1,731.5,267.5"></path><path id="kity_path_499" fill="none" stroke="gray"></path></g><path id="node_outline11" fill="none" stroke="none" d="M736.5,254.5h394a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-394a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text11" fill="black"><text id="kity_text_225" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="259.5" x="741.5">将一个类似数组或可迭代对象中创建一个新的数组实例</text></g></g><g id="minder_node14"><g id="node_expander13" style="cursor: pointer;"><path id="kity_path_507" fill="white" stroke="gray" d="M371.5,323.5A6,6,0,1,1,359.5,323.5A6,6,0,1,1,371.5,323.5"></path><path id="kity_path_508" fill="none" stroke="gray" d="M361,323.5L370,323.5"></path></g><path id="node_outline14" fill="none" stroke="none" d="M376.5,310.5h124a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-124a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text14" fill="black"><text id="kity_text_231" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="315.5" x="381.5">Array.of(item...)</text></g></g><g id="minder_node15"><g id="node_expander12" display="none" style="cursor: pointer;"><path id="kity_path_504" fill="white" stroke="gray" d="M545.5,323.5A6,6,0,1,1,533.5,323.5A6,6,0,1,1,545.5,323.5"></path><path id="kity_path_505" fill="none" stroke="gray"></path></g><path id="node_outline13" fill="none" stroke="none" d="M550.5,310.5h506a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-506a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text13" fill="black"><text id="kity_text_229" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="315.5" x="555.5">创建一个具有可变数量参数的新数组实例，而不考虑参数的数量或类型</text></g></g><g id="minder_node16"><g id="node_expander15" style="cursor: pointer;"><path id="kity_path_513" fill="white" stroke="gray" d="M371.5,379.5A6,6,0,1,1,359.5,379.5A6,6,0,1,1,371.5,379.5"></path><path id="kity_path_514" fill="none" stroke="gray" d="M361,379.5L370,379.5"></path></g><path id="node_outline16" fill="none" stroke="none" d="M376.5,366.5h124a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-124a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text16" fill="black"><text id="kity_text_235" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="371.5" x="381.5">Array(element)&#xa0;</text></g></g><g id="minder_node17"><g id="node_expander14" display="none" style="cursor: pointer;"><path id="kity_path_510" fill="white" stroke="gray" d="M545.5,379.5A6,6,0,1,1,533.5,379.5A6,6,0,1,1,545.5,379.5"></path><path id="kity_path_511" fill="none" stroke="gray"></path></g><path id="node_outline15" fill="none" stroke="none" d="M550.5,366.5h282a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-282a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text15" fill="black"><text id="kity_text_233" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="371.5" x="555.5">构造函数之间的区别在于处理整数参数</text></g></g><g id="minder_node18"><g id="node_expander88" style="cursor: pointer;"><path id="kity_path_732" fill="white" stroke="gray" d="M226.5,1299.5A6,6,0,1,1,214.5,1299.5A6,6,0,1,1,226.5,1299.5"></path><path id="kity_path_733" fill="none" stroke="gray" d="M216,1299.5L225,1299.5"></path></g><path id="node_outline89" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M230.5,1285.5h98a3,3,0,0,1,3,3v22a3,3,0,0,1,-3,3h-98a3,3,0,0,1,-3,-3v-22a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text89" fill="black"><text id="kity_text_381" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="1291.5" x="247.5">实例方法</text></g></g><g id="minder_node19"><g id="node_expander23" style="cursor: pointer;"><path id="kity_path_537" fill="white" stroke="gray" d="M371.5,501.5A6,6,0,1,1,359.5,501.5A6,6,0,1,1,371.5,501.5"></path><path id="kity_path_538" fill="none" stroke="gray" d="M361,501.5L370,501.5"></path></g><path id="node_outline24" fill="none" stroke="none" d="M376.5,488.5h74a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-74a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text24" fill="black"><text id="kity_text_251" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="493.5" x="381.5">转换方法</text></g></g><g id="minder_node20"><g id="node_expander18" style="cursor: pointer;"><path id="kity_path_522" fill="white" stroke="gray" d="M495.5,445.5A6,6,0,1,1,483.5,445.5A6,6,0,1,1,495.5,445.5"></path><path id="kity_path_523" fill="none" stroke="gray" d="M485,445.5L494,445.5"></path></g><path id="node_outline19" fill="none" stroke="none" d="M500.5,432.5h154a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-154a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text19" fill="black"><text id="kity_text_241" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="437.5" x="505.5">arr.join([separator])</text></g></g><g id="minder_node21"><g id="node_expander17" display="none" style="cursor: pointer;"><path id="kity_path_519" fill="white" stroke="gray" d="M699.5,445.5A6,6,0,1,1,687.5,445.5A6,6,0,1,1,699.5,445.5"></path><path id="kity_path_520" fill="none" stroke="gray"></path></g><path id="node_outline18" fill="none" stroke="none" d="M704.5,432.5h538a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-538a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text18" fill="black"><text id="kity_text_239" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="437.5" x="709.5">所有的数组元素被转换成字符串，再用一个分隔符将这些字符串连接起来。</text></g></g><g id="minder_node22"><g id="node_expander20" style="cursor: pointer;"><path id="kity_path_528" fill="white" stroke="gray" d="M495.5,501.5A6,6,0,1,1,483.5,501.5A6,6,0,1,1,495.5,501.5"></path><path id="kity_path_529" fill="none" stroke="gray" d="M485,501.5L494,501.5"></path></g><path id="node_outline21" fill="none" stroke="none" d="M500.5,488.5h105a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-105a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text21" fill="black"><text id="kity_text_245" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="493.5" x="505.5">arr.toString()</text></g></g><g id="minder_node23"><g id="node_expander19" display="none" style="cursor: pointer;"><path id="kity_path_525" fill="white" stroke="gray" d="M650.5,501.5A6,6,0,1,1,638.5,501.5A6,6,0,1,1,650.5,501.5"></path><path id="kity_path_526" fill="none" stroke="gray"></path></g><path id="node_outline20" fill="none" stroke="none" d="M655.5,488.5h330a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-330a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text20" fill="black"><text id="kity_text_243" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="493.5" x="660.5">返回一个字符串，表示指定的数组及其元素。</text></g></g><g id="minder_node24"><g id="node_expander22" style="cursor: pointer;"><path id="kity_path_534" fill="white" stroke="gray" d="M495.5,557.5A6,6,0,1,1,483.5,557.5A6,6,0,1,1,495.5,557.5"></path><path id="kity_path_535" fill="none" stroke="gray" d="M485,557.5L494,557.5"></path></g><path id="node_outline23" fill="none" stroke="none" d="M500.5,544.5h286a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-286a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text23" fill="black"><text id="kity_text_249" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="549.5" x="505.5">arr.toLocaleString([locales[,options]])</text></g></g><g id="minder_node25"><g id="node_expander21" display="none" style="cursor: pointer;"><path id="kity_path_531" fill="white" stroke="gray" d="M831.5,557.5A6,6,0,1,1,819.5,557.5A6,6,0,1,1,831.5,557.5"></path><path id="kity_path_532" fill="none" stroke="gray"></path></g><path id="node_outline22" fill="none" stroke="none" d="M836.5,544.5h1208a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-1208a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text22" fill="black"><text id="kity_text_247" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="549.5" x="841.5">返回一个字符串表示数组中的元素。数组中的元素将使用各自的&#xa0;toLocaleString 方法转成字符串，这些字符串将使用一个特定语言环境的字符串（例如一个逗号 ","）隔开</text></g></g><g id="minder_node26"><g id="node_expander28" style="cursor: pointer;"><path id="kity_path_552" fill="white" stroke="gray" d="M371.5,641.5A6,6,0,1,1,359.5,641.5A6,6,0,1,1,371.5,641.5"></path><path id="kity_path_553" fill="none" stroke="gray" d="M361,641.5L370,641.5"></path></g><path id="node_outline29" fill="none" stroke="none" d="M376.5,628.5h58a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text29" fill="black"><text id="kity_text_261" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="633.5" x="381.5">栈方法</text></g></g><g id="minder_node27"><g id="node_expander25" style="cursor: pointer;"><path id="kity_path_543" fill="white" stroke="gray" d="M479.5,613.5A6,6,0,1,1,467.5,613.5A6,6,0,1,1,479.5,613.5"></path><path id="kity_path_544" fill="none" stroke="gray" d="M469,613.5L478,613.5"></path></g><path id="node_outline26" fill="none" stroke="none" d="M484.5,600.5h126a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-126a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text26" fill="black"><text id="kity_text_255" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="605.5" x="489.5">arr.push(item...)</text></g></g><g id="minder_node28"><g id="node_expander24" display="none" style="cursor: pointer;"><path id="kity_path_540" fill="white" stroke="gray" d="M655.5,613.5A6,6,0,1,1,643.5,613.5A6,6,0,1,1,655.5,613.5"></path><path id="kity_path_541" fill="none" stroke="gray"></path></g><path id="node_outline25" fill="none" stroke="none" d="M660.5,600.5h442a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-442a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text25" fill="black"><text id="kity_text_253" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="605.5" x="665.5">一个或多个元素添加到数组的末尾，并返回该数组的新长度。</text></g></g><g id="minder_node29"><g id="node_expander27" style="cursor: pointer;"><path id="kity_path_549" fill="white" stroke="gray" d="M479.5,669.5A6,6,0,1,1,467.5,669.5A6,6,0,1,1,479.5,669.5"></path><path id="kity_path_550" fill="none" stroke="gray" d="M469,669.5L478,669.5"></path></g><path id="node_outline28" fill="none" stroke="none" d="M484.5,656.5h74a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-74a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text28" fill="black"><text id="kity_text_259" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="661.5" x="489.5">arr.pop()</text></g></g><g id="minder_node30"><g id="node_expander26" display="none" style="cursor: pointer;"><path id="kity_path_546" fill="white" stroke="gray" d="M603.5,669.5A6,6,0,1,1,591.5,669.5A6,6,0,1,1,603.5,669.5"></path><path id="kity_path_547" fill="none" stroke="gray"></path></g><path id="node_outline27" fill="none" stroke="none" d="M608.5,656.5h538a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-538a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text27" fill="black"><text id="kity_text_257" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="661.5" x="613.5">从数组中删除最后一个元素，并返回该元素的值。此方法更改数组的长度。</text></g></g><g id="minder_node31"><g id="node_expander33" style="cursor: pointer;"><path id="kity_path_567" fill="white" stroke="gray" d="M371.5,753.5A6,6,0,1,1,359.5,753.5A6,6,0,1,1,371.5,753.5"></path><path id="kity_path_568" fill="none" stroke="gray" d="M361,753.5L370,753.5"></path></g><path id="node_outline34" fill="none" stroke="none" d="M376.5,740.5h74a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-74a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text34" fill="black"><text id="kity_text_271" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="745.5" x="381.5">队列方法</text></g></g><g id="minder_node32"><g id="node_expander30" style="cursor: pointer;"><path id="kity_path_558" fill="white" stroke="gray" d="M495.5,725.5A6,6,0,1,1,483.5,725.5A6,6,0,1,1,495.5,725.5"></path><path id="kity_path_559" fill="none" stroke="gray" d="M485,725.5L494,725.5"></path></g><path id="node_outline31" fill="none" stroke="none" d="M500.5,712.5h78a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-78a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text31" fill="black"><text id="kity_text_265" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="717.5" x="505.5">arr.shift()</text></g></g><g id="minder_node33"><g id="node_expander29" display="none" style="cursor: pointer;"><path id="kity_path_555" fill="white" stroke="gray" d="M623.5,725.5A6,6,0,1,1,611.5,725.5A6,6,0,1,1,623.5,725.5"></path><path id="kity_path_556" fill="none" stroke="gray"></path></g><path id="node_outline30" fill="none" stroke="none" d="M628.5,712.5h522a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-522a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text30" fill="black"><text id="kity_text_263" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="717.5" x="633.5">从数组中删除第一个元素，并返回该元素的值。此方法更改数组的长度。</text></g></g><g id="minder_node34"><g id="node_expander32" style="cursor: pointer;"><path id="kity_path_564" fill="white" stroke="gray" d="M495.5,781.5A6,6,0,1,1,483.5,781.5A6,6,0,1,1,495.5,781.5"></path><path id="kity_path_565" fill="none" stroke="gray" d="M485,781.5L494,781.5"></path></g><path id="node_outline33" fill="none" stroke="none" d="M500.5,768.5h141a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-141a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text33" fill="black"><text id="kity_text_269" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="773.5" x="505.5">arr.unshift(item...)</text></g></g><g id="minder_node35"><g id="node_expander31" display="none" style="cursor: pointer;"><path id="kity_path_561" fill="white" stroke="gray" d="M686.5,781.5A6,6,0,1,1,674.5,781.5A6,6,0,1,1,686.5,781.5"></path><path id="kity_path_562" fill="none" stroke="gray"></path></g><path id="node_outline32" fill="none" stroke="none" d="M691.5,768.5h458a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-458a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text32" fill="black"><text id="kity_text_267" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="773.5" x="696.5">将一个或多个元素添加到数组的开头，并返回该数组的新长度。</text></g></g><g id="minder_node36"><g id="node_expander38" style="cursor: pointer;"><path id="kity_path_582" fill="white" stroke="gray" d="M371.5,865.5A6,6,0,1,1,359.5,865.5A6,6,0,1,1,371.5,865.5"></path><path id="kity_path_583" fill="none" stroke="gray" d="M361,865.5L370,865.5"></path></g><path id="node_outline39" fill="none" stroke="none" d="M376.5,852.5h90a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-90a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text39" fill="black"><text id="kity_text_281" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="857.5" x="381.5">重排序方法</text></g></g><g id="minder_node37"><g id="node_expander35" style="cursor: pointer;"><path id="kity_path_573" fill="white" stroke="gray" d="M511.5,837.5A6,6,0,1,1,499.5,837.5A6,6,0,1,1,511.5,837.5"></path><path id="kity_path_574" fill="none" stroke="gray" d="M501,837.5L510,837.5"></path></g><path id="node_outline36" fill="none" stroke="none" d="M516.5,824.5h100a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-100a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text36" fill="black"><text id="kity_text_275" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="829.5" x="521.5">arr.reverse()</text></g></g><g id="minder_node38"><g id="node_expander34" display="none" style="cursor: pointer;"><path id="kity_path_570" fill="white" stroke="gray" d="M661.5,837.5A6,6,0,1,1,649.5,837.5A6,6,0,1,1,661.5,837.5"></path><path id="kity_path_571" fill="none" stroke="gray"></path></g><path id="node_outline35" fill="none" stroke="none" d="M666.5,824.5h462a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-462a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text35" fill="black"><text id="kity_text_273" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="829.5" x="671.5">将数组中元素的位置颠倒,并返回该数组。该方法会改变原数组。</text></g></g><g id="minder_node39"><g id="node_expander37" style="cursor: pointer;"><path id="kity_path_579" fill="white" stroke="gray" d="M511.5,893.5A6,6,0,1,1,499.5,893.5A6,6,0,1,1,511.5,893.5"></path><path id="kity_path_580" fill="none" stroke="gray" d="M501,893.5L510,893.5"></path></g><path id="node_outline38" fill="none" stroke="none" d="M516.5,880.5h214a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-214a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text38" fill="black"><text id="kity_text_279" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="885.5" x="521.5">arr.sort([compareFunction])</text></g></g><g id="minder_node40"><g id="node_expander36" display="none" style="cursor: pointer;"><path id="kity_path_576" fill="white" stroke="gray" d="M775.5,893.5A6,6,0,1,1,763.5,893.5A6,6,0,1,1,775.5,893.5"></path><path id="kity_path_577" fill="none" stroke="gray"></path></g><path id="node_outline37" fill="none" stroke="none" d="M780.5,880.5h458a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-458a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text37" fill="black"><text id="kity_text_277" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="885.5" x="785.5">对数组的元素进行排序，并返回数组。排序算法现在是稳定的。</text></g></g><g id="minder_node41"><g id="node_expander49" style="cursor: pointer;"><path id="kity_path_615" fill="white" stroke="gray" d="M371.5,1061.5A6,6,0,1,1,359.5,1061.5A6,6,0,1,1,371.5,1061.5"></path><path id="kity_path_616" fill="none" stroke="gray" d="M361,1061.5L370,1061.5"></path></g><path id="node_outline50" fill="none" stroke="none" d="M376.5,1048.5h74a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-74a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text50" fill="black"><text id="kity_text_303" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="1053.5" x="381.5">操作方法</text></g></g><g id="minder_node42"><g id="node_expander40" style="cursor: pointer;"><path id="kity_path_588" fill="white" stroke="gray" d="M495.5,949.5A6,6,0,1,1,483.5,949.5A6,6,0,1,1,495.5,949.5"></path><path id="kity_path_589" fill="none" stroke="gray" d="M485,949.5L494,949.5"></path></g><path id="node_outline41" fill="none" stroke="none" d="M500.5,936.5h146a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-146a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text41" fill="black"><text id="kity_text_285" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="941.5" x="505.5">arr. concat(item,,,)</text></g></g><g id="minder_node43"><g id="node_expander39" display="none" style="cursor: pointer;"><path id="kity_path_585" fill="white" stroke="gray" d="M691.5,949.5A6,6,0,1,1,679.5,949.5A6,6,0,1,1,691.5,949.5"></path><path id="kity_path_586" fill="none" stroke="gray"></path></g><path id="node_outline40" fill="none" stroke="none" d="M696.5,936.5h522a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-522a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text40" fill="black"><text id="kity_text_283" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="941.5" x="701.5">合并两个或多个数组。此方法不会更改现有数组，而是返回一个新数组。</text></g></g><g id="minder_node44"><g id="node_expander42" style="cursor: pointer;"><path id="kity_path_594" fill="white" stroke="gray" d="M495.5,1005.5A6,6,0,1,1,483.5,1005.5A6,6,0,1,1,495.5,1005.5"></path><path id="kity_path_595" fill="none" stroke="gray" d="M485,1005.5L494,1005.5"></path></g><path id="node_outline43" fill="none" stroke="none" d="M500.5,992.5h150a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-150a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text43" fill="black"><text id="kity_text_289" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="997.5" x="505.5">arr.slice(start, end)</text></g></g><g id="minder_node45"><g id="node_expander41" display="none" style="cursor: pointer;"><path id="kity_path_591" fill="white" stroke="gray" d="M695.5,1005.5A6,6,0,1,1,683.5,1005.5A6,6,0,1,1,695.5,1005.5"></path><path id="kity_path_592" fill="none" stroke="gray"></path></g><path id="node_outline42" fill="none" stroke="none" d="M700.5,992.5h840a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-840a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text42" fill="black"><text id="kity_text_287" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="997.5" x="705.5">返回一个新的数组对象，这一对象是一个由start和 end（不包括end）决定的原数组的浅拷贝。原始数组不会被改变。</text></g></g><g id="minder_node46"><g id="node_expander44" style="cursor: pointer;"><path id="kity_path_600" fill="white" stroke="gray" d="M495.5,1061.5A6,6,0,1,1,483.5,1061.5A6,6,0,1,1,495.5,1061.5"></path><path id="kity_path_601" fill="none" stroke="gray" d="M485,1061.5L494,1061.5"></path></g><path id="node_outline45" fill="none" stroke="none" d="M500.5,1048.5h262a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-262a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text45" fill="black"><text id="kity_text_293" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="1053.5" x="505.5">arr.splice(start,deleteCount,item..) </text></g></g><g id="minder_node47"><g id="node_expander43" display="none" style="cursor: pointer;"><path id="kity_path_597" fill="white" stroke="gray" d="M807.5,1061.5A6,6,0,1,1,795.5,1061.5A6,6,0,1,1,807.5,1061.5"></path><path id="kity_path_598" fill="none" stroke="gray"></path></g><path id="node_outline44" fill="none" stroke="none" d="M812.5,1048.5h670a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-670a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text44" fill="black"><text id="kity_text_291" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="1053.5" x="817.5">通过删除或替换现有元素来修改数组,并以数组形式返回被修改的内容。此方法会改变原数组。</text></g></g><g id="minder_node48"><g id="node_expander46" style="cursor: pointer;"><path id="kity_path_606" fill="white" stroke="gray" d="M495.5,1117.5A6,6,0,1,1,483.5,1117.5A6,6,0,1,1,495.5,1117.5"></path><path id="kity_path_607" fill="none" stroke="gray" d="M485,1117.5L494,1117.5"></path></g><path id="node_outline47" fill="none" stroke="none" d="M500.5,1104.5h242a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-242a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text47" fill="black"><text id="kity_text_297" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="1109.5" x="505.5">arr.copyWithin(target,start,end)</text></g></g><g id="minder_node49"><g id="node_expander45" display="none" style="cursor: pointer;"><path id="kity_path_603" fill="white" stroke="gray" d="M787.5,1117.5A6,6,0,1,1,775.5,1117.5A6,6,0,1,1,787.5,1117.5"></path><path id="kity_path_604" fill="none" stroke="gray"></path></g><path id="node_outline46" fill="none" stroke="none" d="M792.5,1104.5h570a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-570a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text46" fill="black"><text id="kity_text_295" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="1109.5" x="797.5">浅复制数组的一部分到同一数组中的另一个位置，并返回它，而不修改其大小。</text></g></g><g id="minder_node50"><g id="node_expander48" style="cursor: pointer;"><path id="kity_path_612" fill="white" stroke="gray" d="M495.5,1173.5A6,6,0,1,1,483.5,1173.5A6,6,0,1,1,495.5,1173.5"></path><path id="kity_path_613" fill="none" stroke="gray" d="M485,1173.5L494,1173.5"></path></g><path id="node_outline49" fill="none" stroke="none" d="M500.5,1160.5h176a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-176a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text49" fill="black"><text id="kity_text_301" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="1165.5" x="505.5">arr.fill(value,start, end)</text></g></g><g id="minder_node51"><g id="node_expander47" display="none" style="cursor: pointer;"><path id="kity_path_609" fill="white" stroke="gray" d="M721.5,1173.5A6,6,0,1,1,709.5,1173.5A6,6,0,1,1,721.5,1173.5"></path><path id="kity_path_610" fill="none" stroke="gray"></path></g><path id="node_outline48" fill="none" stroke="none" d="M726.5,1160.5h618a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-618a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text48" fill="black"><text id="kity_text_299" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="1165.5" x="731.5">用一个固定值填充一个数组中从起始索引到终止索引内的全部元素。不包括终止索引。</text></g></g><g id="minder_node52"><g id="node_expander56" style="cursor: pointer;"><path id="kity_path_636" fill="white" stroke="gray" d="M371.5,1285.5A6,6,0,1,1,359.5,1285.5A6,6,0,1,1,371.5,1285.5"></path><path id="kity_path_637" fill="none" stroke="gray" d="M361,1285.5L370,1285.5"></path></g><path id="node_outline57" fill="none" stroke="none" d="M376.5,1272.5h74a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-74a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text57" fill="black"><text id="kity_text_317" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="1277.5" x="381.5">位置方法</text></g></g><g id="minder_node53"><g id="node_expander51" style="cursor: pointer;"><path id="kity_path_621" fill="white" stroke="gray" d="M495.5,1229.5A6,6,0,1,1,483.5,1229.5A6,6,0,1,1,495.5,1229.5"></path><path id="kity_path_622" fill="none" stroke="gray" d="M485,1229.5L494,1229.5"></path></g><path id="node_outline52" fill="none" stroke="none" d="M500.5,1216.5h256a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-256a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text52" fill="black"><text id="kity_text_307" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="1221.5" x="505.5">arr.indexOf(searchElement, start)</text></g></g><g id="minder_node54"><g id="node_expander50" display="none" style="cursor: pointer;"><path id="kity_path_618" fill="white" stroke="gray" d="M801.5,1229.5A6,6,0,1,1,789.5,1229.5A6,6,0,1,1,801.5,1229.5"></path><path id="kity_path_619" fill="none" stroke="gray"></path></g><path id="node_outline51" fill="none" stroke="none" d="M806.5,1216.5h554a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-554a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text51" fill="black"><text id="kity_text_305" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="1221.5" x="811.5">返回在数组中可以找到一个给定元素的第一个索引，如果不存在，则返回-1。</text></g></g><g id="minder_node55"><g id="node_expander53" style="cursor: pointer;"><path id="kity_path_627" fill="white" stroke="gray" d="M495.5,1285.5A6,6,0,1,1,483.5,1285.5A6,6,0,1,1,495.5,1285.5"></path><path id="kity_path_628" fill="none" stroke="gray" d="M485,1285.5L494,1285.5"></path></g><path id="node_outline54" fill="none" stroke="none" d="M500.5,1272.5h276a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-276a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text54" fill="black"><text id="kity_text_311" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="1277.5" x="505.5">arr.lastIndexOf(searchElement, end)</text></g></g><g id="minder_node56"><g id="node_expander52" display="none" style="cursor: pointer;"><path id="kity_path_624" fill="white" stroke="gray" d="M821.5,1285.5A6,6,0,1,1,809.5,1285.5A6,6,0,1,1,821.5,1285.5"></path><path id="kity_path_625" fill="none" stroke="gray"></path></g><path id="node_outline53" fill="none" stroke="none" d="M826.5,1272.5h872a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-872a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text53" fill="black"><text id="kity_text_309" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="1277.5" x="831.5">指定元素（也即有效的 JavaScript 值或变量）在数组中的最后一个的索引，如果不存在则返回 -1。从数组的后面向前查找</text></g></g><g id="minder_node57"><g id="node_expander55" style="cursor: pointer;"><path id="kity_path_633" fill="white" stroke="gray" d="M495.5,1341.5A6,6,0,1,1,483.5,1341.5A6,6,0,1,1,495.5,1341.5"></path><path id="kity_path_634" fill="none" stroke="gray" d="M485,1341.5L494,1341.5"></path></g><path id="node_outline56" fill="none" stroke="none" d="M500.5,1328.5h254a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-254a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text56" fill="black"><text id="kity_text_315" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="1333.5" x="505.5">arr.includes(searchElement,start)</text></g></g><g id="minder_node58"><g id="node_expander54" display="none" style="cursor: pointer;"><path id="kity_path_630" fill="white" stroke="gray" d="M799.5,1341.5A6,6,0,1,1,787.5,1341.5A6,6,0,1,1,799.5,1341.5"></path><path id="kity_path_631" fill="none" stroke="gray"></path></g><path id="node_outline55" fill="none" stroke="none" d="M804.5,1328.5h656a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-656a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text55" fill="black"><text id="kity_text_313" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="1333.5" x="809.5">用来判断一个数组是否包含一个指定的值，根据情况，如果包含则返回 true，否则返回false</text></g></g><g id="minder_node59"><g id="node_expander77" style="cursor: pointer;"><path id="kity_path_699" fill="white" stroke="gray" d="M371.5,1649.5A6,6,0,1,1,359.5,1649.5A6,6,0,1,1,371.5,1649.5"></path><path id="kity_path_700" fill="none" stroke="gray" d="M361,1649.5L370,1649.5"></path></g><path id="node_outline78" fill="none" stroke="none" d="M376.5,1636.5h74a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-74a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text78" fill="black"><text id="kity_text_359" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="1641.5" x="381.5">遍历方法</text></g></g><g id="minder_node60"><g id="node_expander58" style="cursor: pointer;"><path id="kity_path_642" fill="white" stroke="gray" d="M495.5,1397.5A6,6,0,1,1,483.5,1397.5A6,6,0,1,1,495.5,1397.5"></path><path id="kity_path_643" fill="none" stroke="gray" d="M485,1397.5L494,1397.5"></path></g><path id="node_outline59" fill="none" stroke="none" d="M500.5,1384.5h202a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-202a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text59" fill="black"><text id="kity_text_321" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="1389.5" x="505.5">arr.every(callback,thisArg)</text></g></g><g id="minder_node61"><g id="node_expander57" display="none" style="cursor: pointer;"><path id="kity_path_639" fill="white" stroke="gray" d="M747.5,1397.5A6,6,0,1,1,735.5,1397.5A6,6,0,1,1,747.5,1397.5"></path><path id="kity_path_640" fill="none" stroke="gray"></path></g><path id="node_outline58" fill="none" stroke="none" d="M752.5,1384.5h559a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-559a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text58" fill="black"><text id="kity_text_319" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="1389.5" x="757.5">对数组的所有元素是否都通过了指定函数的测试。通过返回true,反之返回false</text></g></g><g id="minder_node62"><g id="node_expander60" style="cursor: pointer;"><path id="kity_path_648" fill="white" stroke="gray" d="M495.5,1453.5A6,6,0,1,1,483.5,1453.5A6,6,0,1,1,495.5,1453.5"></path><path id="kity_path_649" fill="none" stroke="gray" d="M485,1453.5L494,1453.5"></path></g><path id="node_outline61" fill="none" stroke="none" d="M500.5,1440.5h203a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-203a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text61" fill="black"><text id="kity_text_325" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="1445.5" x="505.5">arr.some(callback,thisArg)</text></g></g><g id="minder_node63"><g id="node_expander59" display="none" style="cursor: pointer;"><path id="kity_path_645" fill="white" stroke="gray" d="M748.5,1453.5A6,6,0,1,1,736.5,1453.5A6,6,0,1,1,748.5,1453.5"></path><path id="kity_path_646" fill="none" stroke="gray"></path></g><path id="node_outline60" fill="none" stroke="none" d="M753.5,1440.5h591a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-591a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text60" fill="black"><text id="kity_text_323" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="1445.5" x="758.5">对数组的所有元素是否有一项通过了指定函数的测试。通过返回true,反之返回false</text></g></g><g id="minder_node64"><g id="node_expander62" style="cursor: pointer;"><path id="kity_path_654" fill="white" stroke="gray" d="M495.5,1509.5A6,6,0,1,1,483.5,1509.5A6,6,0,1,1,495.5,1509.5"></path><path id="kity_path_655" fill="none" stroke="gray" d="M485,1509.5L494,1509.5"></path></g><path id="node_outline63" fill="none" stroke="none" d="M500.5,1496.5h197a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-197a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text63" fill="black"><text id="kity_text_329" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="1501.5" x="505.5">arr.filter(callback,thisArg)</text></g></g><g id="minder_node65"><g id="node_expander61" display="none" style="cursor: pointer;"><path id="kity_path_651" fill="white" stroke="gray" d="M742.5,1509.5A6,6,0,1,1,730.5,1509.5A6,6,0,1,1,742.5,1509.5"></path><path id="kity_path_652" fill="none" stroke="gray"></path></g><path id="node_outline62" fill="none" stroke="none" d="M747.5,1496.5h473a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-473a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text62" fill="black"><text id="kity_text_327" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="1501.5" x="752.5">创建一个新数组, 其包含通过所提供函数实现的测试的所有元素。&#xa0;</text></g></g><g id="minder_node66"><g id="node_expander64" style="cursor: pointer;"><path id="kity_path_660" fill="white" stroke="gray" d="M495.5,1565.5A6,6,0,1,1,483.5,1565.5A6,6,0,1,1,495.5,1565.5"></path><path id="kity_path_661" fill="none" stroke="gray" d="M485,1565.5L494,1565.5"></path></g><path id="node_outline65" fill="none" stroke="none" d="M500.5,1552.5h164a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-164a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text65" fill="black"><text id="kity_text_333" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="1557.5" x="505.5">arr.forEach(callback)</text></g></g><g id="minder_node67"><g id="node_expander63" display="none" style="cursor: pointer;"><path id="kity_path_657" fill="white" stroke="gray" d="M709.5,1565.5A6,6,0,1,1,697.5,1565.5A6,6,0,1,1,709.5,1565.5"></path><path id="kity_path_658" fill="none" stroke="gray"></path></g><path id="node_outline64" fill="none" stroke="none" d="M714.5,1552.5h378a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-378a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text64" fill="black"><text id="kity_text_331" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="1557.5" x="719.5">对数组的每个元素执行一次提供的函数。无返回值。</text></g></g><g id="minder_node68"><g id="node_expander66" style="cursor: pointer;"><path id="kity_path_666" fill="white" stroke="gray" d="M495.5,1621.5A6,6,0,1,1,483.5,1621.5A6,6,0,1,1,495.5,1621.5"></path><path id="kity_path_667" fill="none" stroke="gray" d="M485,1621.5L494,1621.5"></path></g><path id="node_outline67" fill="none" stroke="none" d="M500.5,1608.5h195a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-195a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text67" fill="black"><text id="kity_text_337" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="1613.5" x="505.5">arr.map(callback,thisArg)</text></g></g><g id="minder_node69"><g id="node_expander65" display="none" style="cursor: pointer;"><path id="kity_path_663" fill="white" stroke="gray" d="M740.5,1621.5A6,6,0,1,1,728.5,1621.5A6,6,0,1,1,740.5,1621.5"></path><path id="kity_path_664" fill="none" stroke="gray"></path></g><path id="node_outline66" fill="none" stroke="none" d="M745.5,1608.5h618a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-618a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text66" fill="black"><text id="kity_text_335" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="1613.5" x="750.5">创建一个新数组，其结果是该数组中的每个元素都调用一个提供的函数后返回的结果。</text></g></g><g id="minder_node70"><g id="node_expander68" style="cursor: pointer;"><path id="kity_path_672" fill="white" stroke="gray" d="M495.5,1677.5A6,6,0,1,1,483.5,1677.5A6,6,0,1,1,495.5,1677.5"></path><path id="kity_path_673" fill="none" stroke="gray" d="M485,1677.5L494,1677.5"></path></g><path id="node_outline69" fill="none" stroke="none" d="M500.5,1664.5h191a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-191a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text69" fill="black"><text id="kity_text_341" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="1669.5" x="505.5">arr.find(callback,thisArg)</text></g></g><g id="minder_node71"><g id="node_expander67" display="none" style="cursor: pointer;"><path id="kity_path_669" fill="white" stroke="gray" d="M736.5,1677.5A6,6,0,1,1,724.5,1677.5A6,6,0,1,1,736.5,1677.5"></path><path id="kity_path_670" fill="none" stroke="gray"></path></g><path id="node_outline68" fill="none" stroke="none" d="M741.5,1664.5h536a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-536a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text68" fill="black"><text id="kity_text_339" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="1669.5" x="746.5">返回数组中满足提供的测试函数的第一个元素的值。否则返回&#xa0;undefined。</text></g></g><g id="minder_node72"><g id="node_expander70" style="cursor: pointer;"><path id="kity_path_678" fill="white" stroke="gray" d="M495.5,1733.5A6,6,0,1,1,483.5,1733.5A6,6,0,1,1,495.5,1733.5"></path><path id="kity_path_679" fill="none" stroke="gray" d="M485,1733.5L494,1733.5"></path></g><path id="node_outline71" fill="none" stroke="none" d="M500.5,1720.5h230a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-230a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text71" fill="black"><text id="kity_text_345" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="1725.5" x="505.5">arr.findIndex(callback,thisArg)</text></g></g><g id="minder_node73"><g id="node_expander69" display="none" style="cursor: pointer;"><path id="kity_path_675" fill="white" stroke="gray" d="M775.5,1733.5A6,6,0,1,1,763.5,1733.5A6,6,0,1,1,775.5,1733.5"></path><path id="kity_path_676" fill="none" stroke="gray"></path></g><path id="node_outline70" fill="none" stroke="none" d="M780.5,1720.5h474a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-474a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text70" fill="black"><text id="kity_text_343" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="1725.5" x="785.5">返回数组中满足提供的测试函数的第一个元素的索引。否则返回-1</text></g></g><g id="minder_node74"><g id="node_expander72" style="cursor: pointer;"><path id="kity_path_684" fill="white" stroke="gray" d="M495.5,1789.5A6,6,0,1,1,483.5,1789.5A6,6,0,1,1,495.5,1789.5"></path><path id="kity_path_685" fill="none" stroke="gray" d="M485,1789.5L494,1789.5"></path></g><path id="node_outline73" fill="none" stroke="none" d="M500.5,1776.5h96a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-96a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text73" fill="black"><text id="kity_text_349" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="1781.5" x="505.5">arr.entries()</text></g></g><g id="minder_node75"><g id="node_expander71" display="none" style="cursor: pointer;"><path id="kity_path_681" fill="white" stroke="gray" d="M641.5,1789.5A6,6,0,1,1,629.5,1789.5A6,6,0,1,1,641.5,1789.5"></path><path id="kity_path_682" fill="none" stroke="gray"></path></g><path id="node_outline72" fill="none" stroke="none" d="M646.5,1776.5h532a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-532a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text72" fill="black"><text id="kity_text_347" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="1781.5" x="651.5">返回一个新的Array Iterator对象，该对象包含数组中每个索引的键/值对。</text></g></g><g id="minder_node76"><g id="node_expander74" style="cursor: pointer;"><path id="kity_path_690" fill="white" stroke="gray" d="M495.5,1845.5A6,6,0,1,1,483.5,1845.5A6,6,0,1,1,495.5,1845.5"></path><path id="kity_path_691" fill="none" stroke="gray" d="M485,1845.5L494,1845.5"></path></g><path id="node_outline75" fill="none" stroke="none" d="M500.5,1832.5h79a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-79a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text75" fill="black"><text id="kity_text_353" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="1837.5" x="505.5">arr.keys()</text></g></g><g id="minder_node77"><g id="node_expander73" display="none" style="cursor: pointer;"><path id="kity_path_687" fill="white" stroke="gray" d="M624.5,1845.5A6,6,0,1,1,612.5,1845.5A6,6,0,1,1,624.5,1845.5"></path><path id="kity_path_688" fill="none" stroke="gray"></path></g><path id="node_outline74" fill="none" stroke="none" d="M629.5,1832.5h576a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-576a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text74" fill="black"><text id="kity_text_351" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="1837.5" x="634.5">返回一个包含数组中每个索引键的Array Iterator对象 遍历数组keys可以用 for in</text></g></g><g id="minder_node78"><g id="node_expander76" style="cursor: pointer;"><path id="kity_path_696" fill="white" stroke="gray" d="M495.5,1901.5A6,6,0,1,1,483.5,1901.5A6,6,0,1,1,495.5,1901.5"></path><path id="kity_path_697" fill="none" stroke="gray" d="M485,1901.5L494,1901.5"></path></g><path id="node_outline77" fill="none" stroke="none" d="M500.5,1888.5h92a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-92a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text77" fill="black"><text id="kity_text_357" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="1893.5" x="505.5">arr.values()</text></g></g><g id="minder_node79"><g id="node_expander75" display="none" style="cursor: pointer;"><path id="kity_path_693" fill="white" stroke="gray" d="M637.5,1901.5A6,6,0,1,1,625.5,1901.5A6,6,0,1,1,637.5,1901.5"></path><path id="kity_path_694" fill="none" stroke="gray"></path></g><path id="node_outline76" fill="none" stroke="none" d="M642.5,1888.5h605a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-605a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text76" fill="black"><text id="kity_text_355" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="1893.5" x="647.5">返回一个包含数组中每个索引的值的Array Iterator对象&#xa0; &#xa0;遍历数组keys可以用 for of</text></g></g><g id="minder_node80"><g id="node_expander82" style="cursor: pointer;"><path id="kity_path_714" fill="white" stroke="gray" d="M371.5,1985.5A6,6,0,1,1,359.5,1985.5A6,6,0,1,1,371.5,1985.5"></path><path id="kity_path_715" fill="none" stroke="gray" d="M361,1985.5L370,1985.5"></path></g><path id="node_outline83" fill="none" stroke="none" d="M376.5,1972.5h74a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-74a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text83" fill="black"><text id="kity_text_369" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="1977.5" x="381.5">归并方法</text></g></g><g id="minder_node81"><g id="node_expander79" style="cursor: pointer;"><path id="kity_path_705" fill="white" stroke="gray" d="M495.5,1957.5A6,6,0,1,1,483.5,1957.5A6,6,0,1,1,495.5,1957.5"></path><path id="kity_path_706" fill="none" stroke="gray" d="M485,1957.5L494,1957.5"></path></g><path id="node_outline80" fill="none" stroke="none" d="M500.5,1944.5h258a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-258a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text80" fill="black"><text id="kity_text_363" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="1949.5" x="505.5">arr.reduce(callback[, initialValue])</text></g></g><g id="minder_node82"><g id="node_expander78" display="none" style="cursor: pointer;"><path id="kity_path_702" fill="white" stroke="gray" d="M803.5,1957.5A6,6,0,1,1,791.5,1957.5A6,6,0,1,1,803.5,1957.5"></path><path id="kity_path_703" fill="none" stroke="gray"></path></g><path id="node_outline79" fill="none" stroke="none" d="M808.5,1944.5h685a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-685a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text79" fill="black"><text id="kity_text_361" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="1949.5" x="813.5">对数组中的每个元素执行一个由您提供的reducer函数(升序执行)，将其结果汇总为单个返回值。</text></g></g><g id="minder_node83"><g id="node_expander81" style="cursor: pointer;"><path id="kity_path_711" fill="white" stroke="gray" d="M495.5,2013.5A6,6,0,1,1,483.5,2013.5A6,6,0,1,1,495.5,2013.5"></path><path id="kity_path_712" fill="none" stroke="gray" d="M485,2013.5L494,2013.5"></path></g><path id="node_outline82" fill="none" stroke="none" d="M500.5,2000.5h296a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-296a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text82" fill="black"><text id="kity_text_367" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="2005.5" x="505.5">arr.reduceRight(callback[, initialValue])</text></g></g><g id="minder_node84"><g id="node_expander80" display="none" style="cursor: pointer;"><path id="kity_path_708" fill="white" stroke="gray" d="M841.5,2013.5A6,6,0,1,1,829.5,2013.5A6,6,0,1,1,841.5,2013.5"></path><path id="kity_path_709" fill="none" stroke="gray"></path></g><path id="node_outline81" fill="none" stroke="none" d="M846.5,2000.5h646a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-646a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text81" fill="black"><text id="kity_text_365" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="2005.5" x="851.5">接受一个函数作为累加器（accumulator）和数组的每个值（从右到左）将其减少为单个值</text></g></g><g id="minder_node85"><g id="node_expander87" style="cursor: pointer;"><path id="kity_path_729" fill="white" stroke="gray" d="M371.5,2097.5A6,6,0,1,1,359.5,2097.5A6,6,0,1,1,371.5,2097.5"></path><path id="kity_path_730" fill="none" stroke="gray" d="M361,2097.5L370,2097.5"></path></g><path id="node_outline88" fill="none" stroke="none" d="M376.5,2084.5h90a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-90a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text88" fill="black"><text id="kity_text_379" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="2089.5" x="381.5">扁平化方法</text></g></g><g id="minder_node86"><g id="node_expander84" style="cursor: pointer;"><path id="kity_path_720" fill="white" stroke="gray" d="M511.5,2069.5A6,6,0,1,1,499.5,2069.5A6,6,0,1,1,511.5,2069.5"></path><path id="kity_path_721" fill="none" stroke="gray" d="M501,2069.5L510,2069.5"></path></g><path id="node_outline85" fill="none" stroke="none" d="M516.5,2056.5h112a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-112a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text85" fill="black"><text id="kity_text_373" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="2061.5" x="521.5">arr.flat(depth)</text></g></g><g id="minder_node87"><g id="node_expander83" display="none" style="cursor: pointer;"><path id="kity_path_717" fill="white" stroke="gray" d="M673.5,2069.5A6,6,0,1,1,661.5,2069.5A6,6,0,1,1,673.5,2069.5"></path><path id="kity_path_718" fill="none" stroke="gray"></path></g><path id="node_outline84" fill="none" stroke="none" d="M678.5,2056.5h730a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-730a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text84" fill="black"><text id="kity_text_371" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="2061.5" x="683.5">按照一个可指定的深度递归遍历数组，并将所有元素与遍历到的子数组中的元素合并为一个新数组返回</text></g></g><g id="minder_node88"><g id="node_expander86" style="cursor: pointer;"><path id="kity_path_726" fill="white" stroke="gray" d="M511.5,2125.5A6,6,0,1,1,499.5,2125.5A6,6,0,1,1,511.5,2125.5"></path><path id="kity_path_727" fill="none" stroke="gray" d="M501,2125.5L510,2125.5"></path></g><path id="node_outline87" fill="none" stroke="none" d="M516.5,2112.5h220a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-220a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text87" fill="black"><text id="kity_text_377" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="2117.5" x="521.5">arr.flatMap(callback,thisArg)</text></g></g><g id="minder_node89"><g id="node_expander85" display="none" style="cursor: pointer;"><path id="kity_path_723" fill="white" stroke="gray" d="M781.5,2125.5A6,6,0,1,1,769.5,2125.5A6,6,0,1,1,781.5,2125.5"></path><path id="kity_path_724" fill="none" stroke="gray"></path></g><path id="node_outline86" fill="none" stroke="none" d="M786.5,2112.5h290a5,5,0,0,1,5,5v16a5,5,0,0,1,-5,5h-290a5,5,0,0,1,-5,-5v-16a5,5,0,0,1,5,-5z"></path><g id="node_text86" fill="black"><text id="kity_text_375" text-rendering="inherit" font-family="宋体,SimSun" font-size="16" dy=".8em" y="2117.5" x="791.5">可以理解成将flat和map方法结合在一起</text></g></g></g></g></svg>